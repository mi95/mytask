<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.mapper.generate.TaskStepMapper">
  <resultMap id="BaseResultMap" type="com.common.pojo.generate.TaskStep">
    <!--@mbg.generated-->
    <!--@Table task_step-->
    <id column="id" property="id" />
    <result column="task_id" property="taskId" />
    <result column="step_num" property="stepNum" />
    <result column="remark" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, task_id, step_num, remark
  </sql>
  <select id="selectByExample" parameterType="com.common.pojo.generate.TaskStepExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from task_step
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from task_step
    where id = #{id}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.pojo.generate.TaskStepExample">
    <!--@mbg.generated-->
    delete from task_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.common.pojo.generate.TaskStep" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into task_step (task_id, step_num, remark)
    values (#{taskId}, #{stepNum}, #{remark})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.common.pojo.generate.TaskStep" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into task_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="stepNum != null">
        step_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId},
      </if>
      <if test="stepNum != null">
        #{stepNum},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.pojo.generate.TaskStepExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from task_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update task_step
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId},
      </if>
      <if test="record.stepNum != null">
        step_num = #{record.stepNum},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update task_step
    set id = #{record.id},
      task_id = #{record.taskId},
      step_num = #{record.stepNum},
      remark = #{record.remark}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.pojo.generate.TaskStep">
    <!--@mbg.generated-->
    update task_step
    <set>
      <if test="taskId != null">
        task_id = #{taskId},
      </if>
      <if test="stepNum != null">
        step_num = #{stepNum},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.pojo.generate.TaskStep">
    <!--@mbg.generated-->
    update task_step
    set task_id = #{taskId},
      step_num = #{stepNum},
      remark = #{remark}
    where id = #{id}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update task_step
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="task_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.taskId}
        </foreach>
      </trim>
      <trim prefix="step_num = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.stepNum}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.remark}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update task_step
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="task_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.taskId != null">
            when id = #{item.id} then #{item.taskId}
          </if>
        </foreach>
      </trim>
      <trim prefix="step_num = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.stepNum != null">
            when id = #{item.id} then #{item.stepNum}
          </if>
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.remark != null">
            when id = #{item.id} then #{item.remark}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into task_step
    (task_id, step_num, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.taskId}, #{item.stepNum}, #{item.remark})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.common.pojo.generate.TaskStep" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into task_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      task_id,
      step_num,
      remark,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{taskId},
      #{stepNum},
      #{remark},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      task_id = #{taskId},
      step_num = #{stepNum},
      remark = #{remark},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.common.pojo.generate.TaskStep" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into task_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="stepNum != null">
        step_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="taskId != null">
        #{taskId},
      </if>
      <if test="stepNum != null">
        #{stepNum},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="taskId != null">
        task_id = #{taskId},
      </if>
      <if test="stepNum != null">
        step_num = #{stepNum},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
    </trim>
  </insert>
</mapper>